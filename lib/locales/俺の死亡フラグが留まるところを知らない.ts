/**
 * Created by user on 2017/12/21/021.
 */

import lazymarks from '@node-novel/layout-pattern/lib/core/pattern/index';
import { _word_en, _word_en3, _word_jp1, _word_zh_all } from '@node-novel/layout-pattern/lib/core/word';
import { IWords, vMaybe, IWordsAll } from '@node-novel/layout-pattern/lib/core/word';
import { sp, sp2 } from '@node-novel/layout-pattern/lib/core/const';
import { IPatternRule } from '@node-novel/layout-pattern/lib/core/types';
import * as StrUtil from 'str-util';

/**
 * 改成小說名字
 */
export const lang = '俺の死亡フラグが留まるところを知らない';

/**
 * 其他用途
 *
 * @type {{chapter_id: string; chapter_title: string; volume_id: string; volume_title: string}}
 */
export const value = {
	chapter_id: '第{{0}}話',
	chapter_title: `$t(chapter_id, [{{0}}])　{{title}}`,

	volume_id: '第{{0}}章',
	volume_title: `$t(chapter_id, [{{0}}])：{{title}}`,
};

/**
 * 在這裡放此小說專屬的取代樣本
 */
export const words_source: IWords[] = [

	/**
	 *
	 * ７轮红球根，６轮鈴芋，１１轮蓝茄
	 * 赤グルトが７回、スズイモが６回、ブルーナが１１回になります
	 */

	['海顿|海登', '海登'],
	['哈罗特|哈洛特|哈乐德|哈洛德|哈罗德|哈洛不特|哈鲁特', '哈洛特'],

	['斯托庫斯|斯托克斯|斯特庫斯', '斯托克斯'],

	[`(?:哈洛特)${sp}(?:斯托克斯|Mouth)`, '$1・$2'],

	[/Mr ?\. ?(卢德|领主|洛德)/g, 'Mr.洛德', 'ig'],
	['罗德|卢德|洛德', '洛德'],

	[`(?:洛德)${sp}(?:斯特魯斯|斯特罗斯)`, '洛德・斯特羅斯'],


	/**
	 * 克拉拉和柯蕾特
	 *
	 * 巴拉克子爵
	 *
	 * 柯蕾特・阿梅莱路
	 * 莱納
	 * 貝魯
	 *
	 * 奥尔贝鲁和蕾欧娜
	 *
	 * 格拉姆格兰
	 */
	['布罗休|布拉休|布罗修', '布羅修'],
	['庫拉拉|克拉拉', '克拉拉'],
	['柯雷特|柯蕾特', '柯蕾特'],

	['莱拉|莱納', '莱納'],
	['格里菲斯|古利费斯', '格里菲斯'],

	['伟大的古拉姆|格拉姆格兰', '格拉姆格蘭'],


	[`莱納${sp}格里菲斯`, '莱納・格里菲斯'],
	[`莱納[Ｏo]格里菲斯`, '莱納・格里菲斯'],

	/**
	 *
	 */
	['大和撫子', '大和撫子'],
	['郁乃|侑乃|由乃', '郁乃'],
	//['曆', '歷'],
	['伊月|一树', '伊月'],

	['繪理香|绘里香', '繪理香'],

	['抗体藥物?|対抗藥物?|抵抗藥物?|抗藥体物?|抗藥物|抗休藥', '抗体藥'],

	[`(?:佑|繪理香|伊月)${sp}皇`, '$1・$2'],

	['皇族領土|皇領', '皇領'],
	['ＬＰ农(?:(?:耕|业)法?|(?:耕|业)?法)', 'ＬＰ農耕法'],

	/**
	 * 德尔菲特（城市名デ儿フィト）
	 *
	 * フィンセント?ファン?ヴェステルフォールト
	 * 文森特
	 * 香諾
	 *
	 */
	['德尔菲特海洋都市|海洋都市德尔菲特', '海洋都市德爾菲特'],

	/**
	 * 王都阿馬齐格
	 * 王权之城
	 * 聖王騎士団
	 *
	 * 弗里艾里
	 *
	 * 罗埃泽历
	 *
	 * フィンセント?ファン?ヴェステルフォールト
	 * 文森特・冯・韦斯特福特
	 * 文森特・范・威斯特魯弗奧魯特
	 */
	['科迪|寇迪', '科迪'],
	['罗宾森|罗宾逊', '羅賓森'],

	['阿玛吉魯|阿馬齐格', '阿瑪吉魯'],
	['弗列里|弗里艾里|福利愛麗', '弗里艾里'],

	['利貝尔|利夏尔', '利夏爾'],
	['文森特|文特森', '文森特'],

	[`(?:フィンセント|文森特)${sp}(?:ファン|范|冯)${sp}(?:ヴェステルフォールト|威斯特魯弗奧魯特|韦斯特福特|韋斯特福特)`, '文森特・范・韋斯特福特'],

	[`(?:文森特|フィンセント)${sp}(?:凡斯特奥鲁多)`, '文森特・范・韋斯特福特'],

	['稥諾|香諾|香农', '香諾'],
	[`科迪${sp}(?:罗西阿魯|魯吉阿尔|卢卡魯)`, '科迪・羅西阿魯'],

	/**
	 * 星咏【Stella】族，被称为「星之后裔」
	 *
	 * 奇菲尔特（ギッフェルト）
	 *
	 */
	['貝魯特斯|貝尔提斯|貝尔戴斯|貝尔迪斯|貝蒂斯|貝魯提斯', '貝爾提斯'],

	['齐费尔特|奇菲尔特', '奇菲爾特'],

	/**
	 * 萨利安帝国
	 *
	 * 「莉莉乌姆（リリウム）」
	 「溫特斯（ウェントス）」
	 *
	 * 哈里森
	 *
	 * 高巴尔遗迹
	 *
	 * 雨果・格拉夫顿
	 */
	['尤西乌斯|尤斯图斯|尤斯托斯|賈斯特斯|尤斯特斯', '尤西烏斯'],
	[`(?:弗洛伊德|弗洛英多|弗洛因德|弗罗因德|弗洛因特)`, '弗洛伊德'],
	[`尤西乌斯${sp}(?:弗洛伊德|弗洛英多|弗洛因德|弗罗因德|弗洛因特)`, '尤西烏斯・弗洛伊德'],

	['萨利昂?|萨里扬|撒里昂|萨里昂|萨里安|賽利安', '薩里昂'],

	['鸟巢之云|伊阿里云', '鳥巢之云'],
	['利賽魯多|利赛鲁特', '利賽魯多'],

	['溫托斯|溫特斯', '溫特斯'],

	['股拉腹痛|格拉夫顿', '格拉夫頓'],

	['海巴尔|高巴尔', '高巴爾'],

	/**
	 * 莉法.古德丽滋
	 *
	 * 希尔維・布魯里奧茲
	 * 奧雷利安・貝魯利奧茲
	 * 布丽琪特
	 * 諾艾露婭
	 *
	 * 弗朗西斯?Ｊ?阿庫莱特
	 */
	['莉法', '莉法'],
	[`莉法${sp}(?:古德丽滋)`, '莉法・古德麗滋'],
	['艾莉|艾丽卡?|艾露|艾爾', '艾露'],

	['希尔薇|希尔維', '希爾薇'],

	['貝魯利奧茲|布魯里奧茲|貝尔利奧茲|柏辽兹', '貝魯利奧茲'],

	['弗兰|弗朗', '弗朗'],
	['弗兰希斯|弗朗西斯|弗朗西斯|弗兰西斯', '弗朗西斯'],
	['阿克莱德|阿庫莱特|亚库莱特', '阿庫萊特'],

	['奧雷迪昂|奧雷利安', '奧雷利安'],

	['卡布兰|布朗', '卡布蘭'],

	[`弗朗西斯${sp}Ｊ${sp}(?:阿庫莱特)`, '弗朗西斯・Ｊ・阿庫萊特'],

	/**
	 *
	 */
	['monster|怪物', '怪物', 'ig'],
	['鬪技大会|武闘大会', '闘技大会'],
	[/Brave Hearts/ig, 'Brave Hearts'],

];

/**
 * 實際使用的取代樣式
 */
export const words: IWords[] = _word_zh_all([

	...words_source,

	...lazymarks['class'],

	_word_en(/LV|HP|MP|EXP|[a-z]|\d+|LP/ig, function (...m)
	{
		return m[1] + StrUtil.toFullWidth(m[2].toUpperCase());
	}),

	_word_en(/Flag/ig, function (...m)
	{
		return m[1] + 'FLAG';
	}),

	[/”，$/gm, '”'],

	[/^[　\t ]+/gm, '\n'],

	[/^-$/gm, ''],

	['〝|〞', '"'],

	[/(\S)\n(─+[ ]*[^─\n]+)/gm, '$1\n\n$2'],
	[/^(─+[ ]*[^─\n]+)\n(\S)/gm, '$1\n\n$2'],

	[/^【([^\n】]+)】/gm, '「$1」'],

	...lazymarks['4'],

	...lazymarks['0'],
	...lazymarks['1'],
	...lazymarks['2'],
	...lazymarks['3'],
	...lazymarks['5'],

]);

/**
 * 需要人工確認的屏蔽字或錯字用語等等
 */
export const words_maybe: vMaybe = [

	//'需要偵測的字',

] as vMaybe;

/**
 * 分析取代完成後執行的代碼
 *
 * @param {string} text
 * @returns {string}
 */
export function words_callback(text: string): string
{
	return text;
}

export default exports;
